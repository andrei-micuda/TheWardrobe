@{
    ViewBag.Title = "Show";
    var numberOfReviews = Model.Reviews.Count();
}

@using Microsoft.AspNet.Identity

@model TheWardrobe.ViewModels.ProductShow

<div class="row product-detail">
    <aside class="col-md-6">
        <div id="productCarousel" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner" style="width: auto; height: 100% !important;">
                <div class="carousel-item active">
                    <img class="d-block mx-auto" src="@Model.Product.ImageUrl" alt="First slide">
                </div>
                <div class="carousel-item">
                    <img class="d-block mx-auto" src="@Model.Product.ImageUrl" alt="Second slide">
                </div>
                <div class="carousel-item">
                    <img class="d-block mx-auto" src="@Model.Product.ImageUrl" alt="Third slide">
                </div>
            </div>
            <a class="carousel-control-prev" href="#productCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#productCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </aside>
    <main class="col-md-6 border-left">
        <article class="content-body">
            <span class="text-muted">@Model.Product.Category.CategoryName</span>
            <h2 class="title">
                @Model.Product.ProductName
                @if ((DateTime.Now - Model.Product.DateAdded).TotalHours <= 24)
                {
                    <span class="badge badge-success align-middle" style="font-size: 0.4em;"> NEW </span>
                }
            </h2>

            <div class="rating-wrap my-3">
                @Html.Partial("_ProductRating", Model.Product.Rating)

                <small class="label-rating text-muted">@numberOfReviews reviews</small>
                <small class="label-rating text-success"> <i class="fa fa-clipboard-check"></i> 154 orders </small>
            </div> <!-- rating-wrap.// -->

            <div class="mb-3">
                <span class="h4 text-dark font-weight-bold">$@Model.Product.Price</span>
                @*<span class="text-muted">/per kg</span>*@
            </div>

            <p>@(Model.Product.Description ?? "This product has no description")</p>

            @*<dl class="row">
                    <dt class="col-sm-3">Model#</dt>
                    <dd class="col-sm-9">Odsy-1000</dd>

                    <dt class="col-sm-3">Color</dt>
                    <dd class="col-sm-9">Brown</dd>

                    <dt class="col-sm-3">Delivery</dt>
                    <dd class="col-sm-9">Russia, USA, and Europe </dd>
                </dl>*@

            <hr>
            <div class="row">
                <div class="form-group col-3 flex-grow-0">
                    <label for="Quantity">Quantity</label>
                    <input type="number" name="Quantity" value="1" min="1" max="@Model.Product.Quantity" step="1" />
                </div>
                <div class="form-group col-md">
                    <label>Select size</label>
                    <div class="mt-2">
                        @{
                            string sizes = Model.Product.Size;
                            bool firstOfType = true;
                            foreach (var size in sizes.Split())
                            {
                                <label class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" name="select-size" class="custom-control-input select-size" @(firstOfType ? "checked" : "")>
                                    <div class="custom-control-label">@size</div>
                                </label>
                                firstOfType = false;
                            }
                        }
                    </div>
                </div> <!-- col.// -->
            </div> <!-- row.// -->
            <a href="#" class="btn  btn-outline-primary"> <span class="text">Add to cart</span> <i class="fas fa-shopping-cart"></i>  </a>
        </article> <!-- product-info-aside .// -->
    </main> <!-- col.// -->
</div>

<div class="row mt-5 justify-content-between">
    <div class="col-6 d-flex flex-column justify-content-around row">
        <div class="text-center mb-4">
            <span class="product-rating font-weight-bold" style="font-size: 2rem">@(Math.Truncate(Model.Reviews.Select(r => r.Rating).DefaultIfEmpty(0).Average() * 10)/10)</span><span class="text-muted">/5</span>
            <div>
                @Html.Partial("_ProductRating", Model.Product.Rating)
            </div>
            <div class="rating-text"><span>@numberOfReviews reviews</span> </div>
        </div>

        <div class="w-75 mx-auto">
            <h5>Rating breakdown</h5>
            <ul class="list-unstyled">
                @for (int i = 5; i >= 1; i--)
                {
                    var numberOfIthStarReviews = Model.Reviews.Where(r => r.Rating == i).Count();
                    <li class="d-flex justify-content-between align-items-center mb-1">
                        <span class="d-inline-block mr-1 text-center" style="min-width: 10px;">@i</span>

                        <div class="d-inline-flex progress mr-1" style="width: 70%">
                            <div class="progress-bar" role="progressbar" style="width: @(numberOfReviews != 0 ? numberOfIthStarReviews*100/numberOfReviews : 0)%; background: orange;" aria-valuenow="@(numberOfReviews != 0 ? numberOfIthStarReviews*100/numberOfReviews : 0)" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>

                        <span class="text-muted">(@numberOfIthStarReviews)</span>
                    </li>
                }
            </ul>
        </div>
    </div>

    <div class="col-6 card">
        @{
            var userReview = Model.Reviews.Where(r => r.UserId == User.Identity.GetUserId()).SingleOrDefault();
        }
        <div class="card-body">
            <form method="post" action="
              @if (userReview == null)
              {
                  @:/Review/New
              }
              else
              {
                  @:/Review/Edit?reviewId=@userReview.ReviewId
              }
              ">
                @if (userReview != null)
                {
                    @: @Html.HttpMethodOverride(HttpVerbs.Put)
                }

                <h4>My Review</h4>
                <input type="text" name="ProductId" value="@Model.Product.ProductId" hidden />

                <div class="form-group my-2">
                    <label for="ReviewRating" hidden>Rating</label>
                    <input id="ReviewRating"
                           name="Rating"
                           type="hidden"
                           class="rating"
                           data-filled="fas fa-star review-rating"
                           data-empty="far fa-star review-rating"
                           value="@(userReview?.Rating??0)" />
                </div>

                <div class="form-group input-group-sm">
                    <label for="ReviewTitle">Title</label>
                    <input type="text" id="ReviewTitle" name="ReviewTitle" class="form-control" value="@(userReview?.ReviewTitle)" />
                </div>

                <div class="form-group">
                    <label for="ReviewBody">Details</label>
                    <textarea id="ReviewBody" name="ReviewBody" class="form-control" rows="2">@(userReview?.ReviewBody)</textarea>
                </div>

                <button type="submit" class="btn btn-outline-success">Save changes <i class="far fa-edit"></i></button>
                @if (userReview != null)
                {
                    <button type="submit" class="btn btn-outline-danger" form="DeleteForm">Delete review</button>
                }
            </form>
            @if (userReview != null)
            {
                <form id="DeleteForm" action="/Review/Delete?reviewId=@userReview.ReviewId" method="post">
                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                </form>
            }
        </div>
    </div>
</div>

@Html.Partial("~/Views/Review/_ReviewList.cshtml", Model.Reviews)

@section scripts
{
    <script>
        $(document).ready(function () {
            $('.custom-pagination').rpmPagination({
                domElement: '.row-review',
                limit: 4
            });
        });
    </script>
}